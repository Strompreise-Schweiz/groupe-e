name: Promote dev → main (auto)

on:
  push:
    branches: [ dev ]

permissions:
  contents: write
  pull-requests: write

jobs:
  validate:
    uses: Strompreise-Schweiz/supplier-data-validation/.github/workflows/validate_supplier.yml@main
    with:
      supplier_schema_version: v1

  promote:
    needs: validate
    if: ${{ needs.validate.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create or fetch PR dev → main
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: 'main',
              head: `${context.repo.owner}:dev`
            });
            let pr = prs[0];
            if (!pr) {
              const created = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Promote dev → main (auto)',
                head: 'dev',
                base: 'main',
                body: 'Automatisch erstellt nach erfolgreichem Validation-Run.'
              });
              pr = created.data;
            }
            core.setOutput('number', pr.number);

      - name: Enable auto-merge
        uses: actions/github-script@v7
        with:
          script: |
            await github.graphql(`
              mutation($repoId:ID!, $prId:ID!) {
                enablePullRequestAutoMerge(
                  input: {pullRequestId: $prId, mergeMethod: SQUASH}
                ) { clientMutationId }
              }
            `, {
              repoId: (await github.rest.repos.get({
                owner: context.repo.owner, repo: context.repo.repo
              })).data.node_id,
              prId: (await github.rest.pulls.get({
                owner: context.repo.owner, repo: context.repo.repo,
                pull_number: ${'${{ steps.pr.outputs.number }}'}
              })).data.node_id
            });
